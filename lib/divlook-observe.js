'use strict';'use stric';Object.defineProperty(exports,'__esModule',{value:true});var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}var defaultOtions={watch:{}};var Observe=function Observe(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultOtions,_ref$watch=_ref.watch,watch=_ref$watch===undefined?defaultOtions.watch:_ref$watch;var regObserve=function regObserve(origin){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var keyname=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var _loop=function _loop(key){var val=origin[key];if(isObject(val)){regObserve(val,result[key],keyname.concat(key))}else{Object.defineProperty(result,key,{get:function get(){return val},set:function set(value){execWatchMethods(object2level1(value,{},keyname.concat(key)));val=value}})}};for(var key in origin){_loop(key)}};var object2level1=function object2level1(obj){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var keyname=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];if(isObject(obj)){for(var key in obj){var childVal=obj[key];object2level1(childVal,result,keyname.concat(key))}}else{result[keyname.join('.')]=[eval('data.'+keyname.join('.')),obj]}return result};var execWatchMethods=function execWatchMethods(level1object){for(var key in level1object){if(key in watch){var fn=watch[key];fn.length===1?fn(level1object[key][1]):fn.apply(undefined,_toConsumableArray(level1object[key]))}}};var isObject=function isObject(obj){return(typeof obj==='undefined'?'undefined':_typeof(obj))==='object'&&obj!==null};var observe={data:data,get set(){}};regObserve(data,observe.data);Object.defineProperty(observe,'set',{enumerable:false,configurable:false,get:function get(){return function(cb){var insert=void 0;if(typeof cb==='function')insert=cb(data);else if(isObject(cb))insert=cb;else return;execWatchMethods(object2level1(insert))}}});return observe};exports.default=Observe;